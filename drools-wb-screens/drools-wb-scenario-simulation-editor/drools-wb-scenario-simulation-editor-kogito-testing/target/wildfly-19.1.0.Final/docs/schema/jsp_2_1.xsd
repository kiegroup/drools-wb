<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns="http://www.w3.org/2001/XMLSchema"
	    targetNamespace="http://java.sun.com/xml/ns/javaee"
	    xmlns:javaee="http://java.sun.com/xml/ns/javaee"
	    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	    elementFormDefault="qualified"
	    attributeFormDefault="unqualified"
	    version="2.1">
  <xsd:annotation>
    <xsd:documentation>
      @(#)jsp_2_1.xsds	1.5 08/11/05
    </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation>

      Copyright 2003-2005 Sun Microsystems, Inc.
      4150 Network Circle
      Santa Clara, California 95054
      U.S.A
      All rights reserved.

      Sun Microsystems, Inc. has intellectual property rights
      relating to technology described in this document. In
      particular, and without limitation, these intellectual
      property rights may include one or more of the U.S. patents
      listed at http://www.sun.com/patents and one or more
      additional patents or pending patent applications in the
      U.S. and other countries.

      This document and the technology which it describes are
      distributed under licenses restricting their use, copying,
      distribution, and decompilation. No part of this document
      may be reproduced in any form by any means without prior
      written authorization of Sun and its licensors, if any.

      Third-party software, including font technology, is
      copyrighted and licensed from Sun suppliers.

      Sun, Sun Microsystems, the Sun logo, Solaris, Java, J2EE,
      JavaServer Pages, Enterprise JavaBeans and the Java Coffee
      Cup logo are trademarks or registered trademarks of Sun
      Microsystems, Inc. in the U.S. and other countries.

      Federal Acquisitions: Commercial Software - Government Users
      Subject to Standard License Terms and Conditions.

    </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation>

      This is the XML Schema for the JSP 2.1 deployment descriptor
      types.  The JSP 2.1 schema contains all the special
      structures and datatypes that are necessary to use JSP files
      from a web application.

      The contents of this schema is used by the web-app_2_5.xsd
      file to define JSP specific content.

    </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation>

      The following conventions apply to all Java EE
      deployment descriptor elements unless indicated otherwise.

      - In elements that specify a pathname to a file within the
	same JAR file, relative filenames (i.e., those not
	starting with "/") are considered relative to the root of
	the JAR file's namespace.  Absolute filenames (i.e., those
	starting with "/") also specify names in the root of the
	JAR file's namespace.  In general, relative names are
	preferred.  The exception is .war files where absolute
	names are preferred for consistency with the Servlet API.

    </xsd:documentation>
  </xsd:annotation>

  <xsd:include schemaLocation="javaee_5.xsd"/>


<!-- **************************************************** -->

  <xsd:complexType name="jsp-configType">
    <xsd:annotation>
      <xsd:documentation>

	The jsp-configType is used to provide global configuration
	information for the JSP files in a web application. It has
	two subelements, taglib and jsp-property-group.

      </xsd:documentation>
    </xsd:annotation>

    <xsd:sequence>
      <xsd:element name="taglib"
		   type="javaee:taglibType"
		   minOccurs="0"
		   maxOccurs="unbounded"/>
      <xsd:element name="jsp-property-group"
		   type="javaee:jsp-property-groupType"
		   minOccurs="0"
		   maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:ID"/>
  </xsd:complexType>

<!-- **************************************************** -->

  <xsd:complexType name="jsp-fileType">
    <xsd:annotation>
      <xsd:documentation>

	The jsp-file element contains the full path to a JSP file
	within the web application beginning with a `/'.

      </xsd:documentation>
    </xsd:annotation>

    <xsd:simpleContent>
      <xsd:restriction base="javaee:pathType"/>
    </xsd:simpleContent>
  </xsd:complexType>

<!-- **************************************************** -->

  <xsd:complexType name="jsp-property-groupType">
    <xsd:annotation>
      <xsd:documentation>

	The jsp-property-groupType is used to group a number of
	files so they can be given global property information.
	All files so described are deemed to be JSP files.  The
	following additional properties can be described:

	    - Control whether EL is ignored.
	    - Control whether scripting elements are invalid.
	    - Indicate pageEncoding information.
	    - Indicate that a resource is a JSP document (XML).
	    - Prelude and Coda automatic includes.
            - Control whether the character sequence #{ is allowed
              when used as a String literal.
            - Control whether template text containing only
              whitespaces must be removed from the response output.

      </xsd:documentation>
    </xsd:annotation>

    <xsd:sequence>
      <xsd:group ref="javaee:descriptionGroup"/>
      <xsd:element name="url-pattern"
		   type="javaee:url-patternType"
		   maxOccurs="unbounded"/>
      <xsd:element name="el-ignored"
		   type="javaee:true-falseType"
		   minOccurs="0">
	<xsd:annotation>
	  <xsd:documentation>

	    Can be used to easily set the isELIgnored
	    property of a group of JSP pages.  By default, the
	    EL evaluation is enabled for Web Applications using
	    a Servlet 2.4 or greater web.xml, and disabled
	    otherwise.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
      <xsd:element name="page-encoding"
		   type="javaee:string"
		   minOccurs="0">
	<xsd:annotation>
	  <xsd:documentation>

	    The valid values of page-encoding are those of the
	    pageEncoding page directive.  It is a
	    translation-time error to name different encodings
	    in the pageEncoding attribute of the page directive
	    of a JSP page and in a JSP configuration element
	    matching the page.  It is also a translation-time
	    error to name different encodings in the prolog
	    or text declaration of a document in XML syntax and
	    in a JSP configuration element matching the document.
	    It is legal to name the same encoding through
	    mulitple mechanisms.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
      <xsd:element name="scripting-invalid"
		   type="javaee:true-falseType"
		   minOccurs="0">
	<xsd:annotation>
	  <xsd:documentation>

	    Can be used to easily disable scripting in a
	    group of JSP pages.  By default, scripting is
	    enabled.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
      <xsd:element name="is-xml"
		   type="javaee:true-falseType"
		   minOccurs="0">
	<xsd:annotation>
	  <xsd:documentation>

	    If true, denotes that the group of resources
	    that match the URL pattern are JSP documents,
	    and thus must be interpreted as XML documents.
	    If false, the resources are assumed to not
	    be JSP documents, unless there is another
	    property group that indicates otherwise.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
      <xsd:element name="include-prelude"
		   type="javaee:pathType"
		   minOccurs="0"
		   maxOccurs="unbounded">
	<xsd:annotation>
	  <xsd:documentation>

	    The include-prelude element is a context-relative
	    path that must correspond to an element in the
	    Web Application.  When the element is present,
	    the given path will be automatically included (as
	    in an include directive) at the beginning of each
	    JSP page in this jsp-property-group.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
      <xsd:element name="include-coda"
		   type="javaee:pathType"
		   minOccurs="0"
		   maxOccurs="unbounded">
	<xsd:annotation>
	  <xsd:documentation>

	    The include-coda element is a context-relative
	    path that must correspond to an element in the
	    Web Application.  When the element is present,
	    the given path will be automatically included (as
	    in an include directive) at the end of each
	    JSP page in this jsp-property-group.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
      <xsd:element name="deferred-syntax-allowed-as-literal"
		   type="javaee:true-falseType"
		   minOccurs="0">
	<xsd:annotation>
	  <xsd:documentation>

             The character sequence #{ is reserved for EL expressions.
             Consequently, a translation error occurs if the #{
             character sequence is used as a String literal, unless
             this element is enabled (true). Disabled (false) by
             default.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
      <xsd:element name="trim-directive-whitespaces"
		   type="javaee:true-falseType"
		   minOccurs="0">
	<xsd:annotation>
	  <xsd:documentation>

             Indicates that template text containing only whitespaces
             must be removed from the response output. It has no
             effect on JSP documents (XML syntax). Disabled (false)
             by default.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:ID"/>
  </xsd:complexType>

<!-- **************************************************** -->

  <xsd:complexType name="taglibType">
    <xsd:annotation>
      <xsd:documentation>

	The taglibType defines the syntax for declaring in
	the deployment descriptor that a tag library is
	available to the application.  This can be done
	to override implicit map entries from TLD files and
	from the container.

      </xsd:documentation>
    </xsd:annotation>

    <xsd:sequence>
      <xsd:element name="taglib-uri"
		   type="javaee:string">
	<xsd:annotation>
	  <xsd:documentation>

	    A taglib-uri element describes a URI identifying a
	    tag library used in the web application.  The body
	    of the taglib-uri element may be either an
	    absolute URI specification, or a relative URI.
	    There should be no entries in web.xml with the
	    same taglib-uri value.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>

      <xsd:element name="taglib-location"
		   type="javaee:pathType">
	<xsd:annotation>
	  <xsd:documentation>

	    the taglib-location element contains the location
	    (as a resource relative to the root of the web
	    application) where to find the Tag Library
	    Description file for the tag library.

	  </xsd:documentation>
	</xsd:annotation>
      </xsd:element>

    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:ID"/>
  </xsd:complexType>

</xsd:schema>

