#
# Copyright 2016 Red Hat, Inc. and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
EditMenu.title=Edit
EditMenu.cut=Cut
EditMenu.copy=Copy
EditMenu.paste=Paste
EditMenu.deleteCells=Delete cell(s)
EditMenu.deleteColumns=Delete column(s)
EditMenu.deleteRows=Delete row(s)
EditMenu.otherwise=Insert "any other" value
EditMenu.otherwiseDescription=<p>For condition columns in Guided Decision Tables, you can apply an "any other" value to table cells within the column if the following parameters are set: \
                              <ul><li><b>Calculation type</b> for the condition column has been set to <b>Literal value</b>.</li> \
                              <li><b>Operator</b> has been set as equality <b>==</b> or inequality <b>!=</b>.</li></ul> \
                              The "any other" value enables a rule to be defined for any other values not explicitly defined in the rules already in the table.</p>
InsertMenu.title=Insert
InsertMenu.appendRow=Append row
InsertMenu.insertRowAbove=Insert row above
InsertMenu.insertRowBelow=Insert row below
InsertMenu.insertColumn=Insert column
ViewMenu.title=View
ViewMenu.zoom=Zoom
ViewMenu.merged=Merged
ViewMenu.auditLog=Audit log
CellContextMenuViewImpl.cut=Cut
CellContextMenuViewImpl.copy=Copy
CellContextMenuViewImpl.paste=Paste
CellContextMenuViewImpl.deleteCells=Delete cell(s)
RowContextMenuViewImpl.cut=Cut
RowContextMenuViewImpl.copy=Copy
RowContextMenuViewImpl.paste=Paste
RowContextMenuViewImpl.insertRowAbove=Insert row above
RowContextMenuViewImpl.insertRowBelow=Insert row below
RowContextMenuViewImpl.deleteRows=Delete row(s)
RowContextMenuViewImpl.title=Radar to view table layout
PopOverViewImpl.title=Definition
AdditionalInfoPageView.InsertAdditionalInfo=Insert additional information about the column
AdditionalInfoPageView.HeaderDescription=Header (description):
AdditionalInfoPageView.HideColumn=Hide column:
AdditionalInfoPageView.LogicallyInsert=Logically insert:
AdditionalInfoPageView.UpdateEngine=Update engine with changes:
AdditionalInfoPageView.AdditionalInfoPageDescription=Add header text for the column and other supplementary parameters.
AttributeColumnPageView.Select=Select the Attribute
AttributeColumnPageView.ActivationGroup=activation-group
AttributeColumnPageView.ActivationGroupDescription=A string identifying an activation (or XOR) group to which you want to assign the rule. In activation groups, only one rule can be activated. The first rule to fire will cancel all pending activations of all rules in the activation group. Example: `activation-group "GroupName"`
AttributeColumnPageView.AgendaGroup=agenda-group
AttributeColumnPageView.AgendaGroupDescription=A string identifying an agenda group to which you want to assign the rule. Agenda groups allow you to partition the agenda to provide more execution control over groups of rules. Only rules in an agenda group that has acquired a focus are able to be activated. Example: `agenda-group "GroupName"`
AttributeColumnPageView.AutoFocus=auto-focus
AttributeColumnPageView.AutoFocusDescription=A Boolean value, applicable only to rules within agenda groups. When the option is selected, the next time the rule is activated, a focus is automatically given to the agenda group to which the rule is assigned.
AttributeColumnPageView.Calendars=calendars
AttributeColumnPageView.CalendarsDescription=A Quartz calendar definition for scheduling the rule. Example: `calendars "* * 0-7,18-23 ? * *"` (exclude non-business hours)
AttributeColumnPageView.DateEffective=date-effective
AttributeColumnPageView.DateEffectiveDescription=A string containing a date and time definition. The rule can be activated only if the current date and time is after a `date-effective` attribute. Example: `date-effective "4-Sep-2018"`
AttributeColumnPageView.DateExpires=date-expires
AttributeColumnPageView.DateExpiresDescription=A string containing a date and time definition. The rule cannot be activated if the current date and time is after the `date-expires` attribute. Example: `date-expires "4-Oct-2018"`
AttributeColumnPageView.Dialect=dialect
AttributeColumnPageView.DialectDescription=A string identifying either `JAVA` or `MVEL` as the language to be used for code expressions in the rule. By default, the rule uses the dialect specified at the package level. Any dialect specified here overrides the package dialect setting for the rule. Example: `dialect "JAVA"`
AttributeColumnPageView.Duration=duration
AttributeColumnPageView.DurationDescription=A long integer value defining the duration of time in milliseconds after which the rule can be activated, if the rule conditions are still met. Example: `duration 10000`
AttributeColumnPageView.Enabled=enabled
AttributeColumnPageView.EnabledDescription=A Boolean value. When the option is selected, the rule is enabled. When the option is not selected, the rule is disabled.
AttributeColumnPageView.LockOnActive=lock-on-active
AttributeColumnPageView.LockOnActiveDescription=A Boolean value, applicable only to rules within rule flow groups or agenda groups. When the option is selected, the next time the ruleflow group for the rule becomes active or the agenda group for the rule receives a focus, the rule cannot be activated again until the ruleflow group is no longer active or the agenda group loses the focus. This is a stronger version of the `no-loop` attribute, because the activation of a matching rule is discarded regardless of the origin of the update (not only by the rule itself). This attribute is ideal for calculation rules where you have a number of rules that modify a fact and you do not want any rule re-matching and firing again.
AttributeColumnPageView.Negate=negate
AttributeColumnPageView.NegateDescription=A Boolean value. When the option is selected, the condition (when) part of the rule is negated.
AttributeColumnPageView.NoLoop=no-loop
AttributeColumnPageView.NoLoopDescription=A Boolean value. When the option is selected, the rule cannot be reactivated (looped) if a consequence of the rule re-triggers a previously met condition. When the condition is not selected, the rule can be looped in these circumstances.
AttributeColumnPageView.RuleflowGroup=ruleflow-group
AttributeColumnPageView.RuleflowGroupDescription=A string identifying a rule flow group. In rule flow groups, rules can fire only when the group is activated by the associated rule flow. Example: `ruleflow-group "GroupName"`
AttributeColumnPageView.Salience=salience
AttributeColumnPageView.SalienceDescription=An integer defining the priority of the rule. Rules with a higher salience value are given higher priority when ordered in the activation queue. Example: `salience 10`
AttributeColumnPageView.Timer=timer
AttributeColumnPageView.TimerDescription=A string identifying either `int` (interval) or `cron` timer definition for scheduling the rule. Example: `timer "*/5 * * * *"`  (every 5 minutes)
AttributeColumnPageView.AttributeColumnPageDescription=Add one or more attribute columns representing any of the DRL rule attributes, such as Salience, Enabled, Date-Effective, and others.
CalculationTypePageView.Select=Select the Calculation type
CalculationTypePageView.CalculationType=Calculation type:
CalculationTypePageView.LiteralValue=Literal value
CalculationTypePageView.Formula=Formula
CalculationTypePageView.Predicate=Predicate
CalculationTypePageView.CalculationTypePageDescription=Select one of the following calculation types:<ul>\
                                                       <li><b>Literal value:</b> The value in the cell will be compared with the field using the operator.</li>\
                                                       <li><b>Formula:</b> The expression in the cell will be evaluated and then compared with the field.</li>\
                                                       <li><b>Predicate:</b> No field is needed; the expression will be evaluated to <b>true</b> or <b>false</b>.</li></ul>
FieldPageView.Select=Select the Field
FieldPageView.Set=Set the field
FieldPageView.SetThePatternFirst=You need to set the "Pattern" first
FieldPageView.SetTheCalculationTypeFirst=You need to set the "Calculation type" first
FieldPageView.YouMustEnterAColumnField=You must select a Field.
FieldPageView.Field=Field:
FieldPageView.SelectField=Select a field
FieldPageView.SelectFieldPageDescription=Select a field from the previously specified fact pattern. The field options are defined in the fact file in the <b>Data Objects</b> panel of your project. \
                                         (Examples: <b>amount</b> or <b>lengthYears</b> fields within the <b>LoanApplication</b> fact type)
FieldPageView.TextFieldPageDescription=Set the field with a predicate. \
                                       Predicates are expressions that resolve to a true or a false. \
                                       You can place $param in the field and the value from the cell will be substituted in place of param. \
                                       For example "this.callMethod($param)".
FieldPageView.PleaseEnterANameThatIsNotAlreadyUsed=That binding name is already in use by another Pattern or Field - please pick another.
FieldPageView.PredicateBindingInfo=You don't need to set the Binding when "Calculation type" is "Predicate". The field is set with a predicate expression and will be evaluated to true or false.
FieldPageView.Binding=Binding:
MetaDataColumnPageView.InsertTheMetadata=Insert the Metadata name
MetaDataColumnPageView.Metadata=Metadata:
MetaDataColumnPageView.MetaDataColumnPageDescription=With this column option, you can define a metadata element as a column in your decision table. \
                                                     Each column represents the normal metadata annotation in DRL rules. By default, the metadata column is hidden. \
                                                     To display the column, click <b>Edit Columns</b> in the decision table editor and clear the <b>Hide column</b> check box.
OperatorPageView.NotifyNoSelectedOperator=Operator has not been selected
OperatorPageView.Select=Select the Operator
OperatorPageView.YouNeedToSetTheField=You need to set the "Field" first
OperatorPageView.YouDontNeedToSetTheOperator=You don't need to set the Operator when "Calculation type" is "Predicate"
OperatorPageView.CurrentField=Current Field:
OperatorPageView.Operator=Operator:
OperatorPageView.OperatorPageDescription=Select the operator to be applied to the fact pattern and field previously specified.
PatternPageView.Select=Select a Pattern or create a new one
PatternPageView.Pattern=Pattern:
PatternPageView.CreateANewFact=Create a new Fact Pattern
PatternPageView.Metadata=Metadata:
PatternPageView.SelectPattern=Select a pattern
PatternPageView.EntryPoint=Entry Point:
PatternPageView.YouMustEnterAColumnPattern=You must select a Pattern.
PatternPageView.PatternPageDescriptionConditions=Select from the list of fact patterns already used in <i>Conditions</i> in your table or create a new fact pattern. A fact pattern is a combination of \
                                       an available data object in the package and a model class binding that you specify. (Examples: <b>LoanApplication [application]</b> or \
                                       <b>IncomeSource [income]</b> where the bracketed portion is the binding to the given fact type).
PatternPageView.PatternPageDescriptionActions=Select from the list of fact patterns already used in <i>Conditions</i> or <i>Condition BRL fragments</i> in your table or create a new fact pattern. A fact pattern is a combination of \
                                       an available data object in the package and a model class binding that you specify. (Examples: <b>LoanApplication [application]</b> or \
                                       <b>IncomeSource [income]</b> where the bracketed portion is the binding to the given fact type).
PatternPageView.EntryPointDescription=Define the entry point for the fact pattern, if applicable. An entry point is a gate or stream through which facts enter the rule engine, \
                                      if specified. (Examples: <b>Application Stream</b>, <b>Credit Check Stream</b>).
PatternToDeletePageView.PatternToDeletePageDescription=Delete a fact that was added previously as a fact pattern in the table.
RuleModellerPageView.RuleModellerPageDescription=A Business Rule Language (BRL) fragment is a section of a rule created using the Guided Rule Editor. \
                                                 The condition BRL fragment is the "WHEN" portion of the rule, and the Action BRL fragment is the "THEN" \
                                                 portion of the rule. With this column option, you can define a Condition BRL fragment to be used in the \
                                                 left ("WHEN") side of a rule. In the embedded Guided Rule Editor, field values defined as "Template Keys" \
                                                 form columns in the decision table. Simpler column types can refer to Facts and Fact fields bound in the \
                                                 BRL fragment and vice-versa.
SummaryPageView.Select=Select the type of column
SummaryPageView.IncludeAdvanced=Include advanced options
SummaryPageView.SummaryPageDescription=Add a new column to the guided decision table. (Select <b>Include advanced options</b> to view all options). \
                                       The parameters required for each column type are presented as additional pages in the wizard.
ValueOptionsPageView.InsertInfo=Insert some information about the value
ValueOptionsPageView.ValueList=Value list (optional):
ValueOptionsPageView.OverSlidingWindow=Over sliding window:
ValueOptionsPageView.Default=Default value:
ValueOptionsPageView.ConstraintValue=Constraint value:
ValueOptionsPageView.ValueOptionsPageDescription=(optional) Enter a list of value options, delimited by a comma and space, to limit table input data for the condition ("WHEN") portion of the rule. \
                                                 When this value list is defined, the values will be provided in the table cells for that column as a drop-down list, from which users can select only one option. \
                                                 (Example 1 list: <b>Monday</b>, <b>Wednesday</b>, <b>Friday </b>to specify only these three options. Example 2 list: <b>"Berlin, Germany"</b>, <b>"Paris, France"</b>)
DefaultValuesPageView.DefaultValuesPage=Specify default values for new rows
DefaultValuesPageView.DefaultValuesPageDescription=You can specify a default vale per template key used in this column. If no template key is present you can just say if the column should be activated (true) or not (false).
WorkItemPageView.Select=Select a Work Item
WorkItemPageView.WorkItem=Work Item:
WorkItemPageView.NoWorkItemsAvailable=<None available>
WorkItemPageView.Choose=Choose...
WorkItemPageView.WorkItemPageDescription=Execute a work item handler, based on your predefined work item definitions, or set the value of a previously \
                                         defined fact field to the value of a result parameter of a work item handler for the "THEN" portion of the rule. The work item must \
                                         define a result parameter of the same data type as a field on a bound fact in order for you to set the field to the return parameter. \
                                         (Work items are created in <b>Design → Projects → [select project] → Add Asset → Work Item definition</b>).
NewPatternView.FactType=Fact type:
NewPatternView.Binding=Binding:
NewPatternView.NegatePattern=Negate pattern match:
NewPatternView.CreateANewFact=Create a new fact pattern
NewPatternView.Cancel=Cancel
NewPatternView.OK=OK
NewPatternPresenter.PleaseEnterANameForFact=You have to bind the fact to a name. Please enter a binding name.
NewPatternPresenter.PleaseEnterANameThatIsNotTheSameAsTheFactType=Please enter a name that is not the same as the fact type.
NewPatternPresenter.PleaseEnterANameThatIsNotAlreadyUsedByAnotherPattern=That binding name is already in use by another Pattern or Field - please pick another.
AdditionalInfoPage.AdditionalInfo=Additional info
AdditionalInfoPage.HideColumnDescription=Select this to hide the column, or clear this to display the column.
AdditionalInfoPage.HeaderColumnDescription=Describe shortly what this column serves for.
AdditionalInfoPage.LogicalInsertDescription=Select this to insert the fact pattern logically into the decision engine, or clear this to insert it regularly. \
                                            The decision engine is responsible for logical decisions on insertions and retractions of facts. After regular or stated \
                                            insertions, facts have to be retracted explicitly. After logical insertions, facts are automatically retracted when the \
                                            conditions that asserted the facts in the first place are no longer true.
AdditionalInfoPage.UpdateEngineDescription=This option appears when the selected Fact Pattern is already used in another column in the guided decision table. \
                                           Select this to update the decision engine with the modified field values, or clear this to not update the decision engine.
AttributeColumnPage.AddNewAttribute=Add a new Attribute column
CalculationTypePage.CalculationType=Calculation type
FieldPage.Field=Field
FieldPage.BindingDescription=(optional) Define a binding for the previously selected field, if needed. (Example: For pattern <b>LoanApplication [application]</b>, field <b>amount</b>, \
                             and operator <b>equal to</b>, if binding is set to <b>$amount</b>, the end condition will be <b>application : LoanApplication($amount : amount == [value])</b>).
MetaDataColumnPage.AddNewMetadata=Add a new Metadata column
MetaDataColumnPage.MetadataNameEmpty=Meta Data should be given a name.
MetaDataColumnPage.ThatColumnNameIsAlreadyInUsePleasePickAnother=That column name is already in use - please pick another
MetaDataColumnPage.IsNotValidIdentifier=The MetaData key must have java variable form. It can't start with numbers, contain spaces and special characters.
OperatorPage.Operator=Operator
OperatorPage.NoOperator=(no operator)
PatternPage.Pattern=Pattern
RuleModellerPage.InsertAnActionBRLFragment=Insert an Action BRL fragment
RuleModellerPage.InsertAConditionBRLFragment=Insert a Condition BRL fragment
RuleModellerPage.RuleModeller=Rule Modeller
SummaryPage.NewColumn=New Column
ValueOptionsPage.ValueOptions=Value options
ValueOptionsPage.CEPWindowDescription=CEP Window.
ValueOptionsPage.DefaultValueDescription=(optional) Enter or select one of the previously defined value options as the default value that will appear in the cell \
                                         automatically in a new row. You can also select any previously configured Data Enumerations in the project as a default value. \
                                         If the default value is not specified, the table cell will be blank by default.
WorkItemPage.WorkItem=Work Item
ActionInsertFactPlugin.SetTheValueOfAField=Set the value of a field
ActionRetractFactPlugin.DeleteAnExistingFact=Delete an existing fact
YouMustEnterAColumnHeaderValueDescription=You must enter a column header value (description)
ThatColumnNameIsAlreadyInUsePleasePickAnother=That column name is already in use - please pick another
ActionWorkItemPlugin.ExecuteWorkItem=Execute a Work Item
ActionWorkItemSetFieldPlugin.SetValue=Set the value of a field with a Work Item result
AttributeColumnPlugin.AddAttributeColumn=Add an Attribute column
ConditionColumnPlugin.AddConditionColumn=Add a Condition
MetaDataColumnPlugin.AddMetadataColumn=Add a Metadata column
NewGuidedDecisionTableColumnWizard.AddNewColumn=Add a new column
NewGuidedDecisionTableColumnWizard.EditColumn=Edit column
NewGuidedDecisionTableColumnWizard.GenericVetoError=Cannot update column. Operation was vetoed.
NewGuidedDecisionTableColumnWizard.UpdatePatternInUseVetoError=<p>Cannot update column as it defines a Pattern used by one or more Actions.</p><p>Please delete the Action, or Actions, first and try again.</p>
NewGuidedDecisionTableColumnWizard.DeletePatternInUseVetoError0=<p>Cannot delete column '{0}' as it defines a Pattern used by one or more Actions.</p><p>Please delete the Action, or Actions, first and try again.</p>
BRLConditionColumnPlugin.AddConditionBRL=Add a Condition BRL fragment
BRLActionColumnPlugin.AddActionBRL=Add an Action BRL fragment
PatternToDeletePage.Pattern=Pattern
PatternToDeletePageView.Choose=Choose...
PatternToDeletePageView.None=<None defined>
PatternToDeletePageView.Select=Select a Pattern to delete
PatternToDeletePageView.Pattern=Pattern
GuidedDecisionTableAccordionItem.Metadata=Metadata columns
GuidedDecisionTableAccordionItem.Attribute=Attribute columns
GuidedDecisionTableAccordionItem.Condition=Condition columns
GuidedDecisionTableAccordionItem.Action=Action columns
ColumnsPageView.ConfigureColumnsNote=Configure the columns first, then add rows (rules). A fact model (in the current package) will be needed to provide the facts and fields to configure this decision table.
ColumnsPage.Columns=Columns
ShowRuleNameOptionView.RuleName=Show rule name column
