#
# Copyright 2016 Red Hat, Inc. and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
EditMenu.title=編集
EditMenu.cut=カット
EditMenu.copy=コピー
EditMenu.paste=ペースト
EditMenu.deleteCells=セルの削除
EditMenu.deleteColumns=列の削除
EditMenu.deleteRows=行の削除
EditMenu.otherwise=その他の値を挿入
EditMenu.otherwiseDescription=<p>ガイド付きデシジョンテーブルの条件列で、以下のパラメーターが設定されている場合には、その列に含まれるテーブルセルに "any other" の値を適用できます (条件列の <ul><li><b>Calculation type</b> が <b>Literal value</b> に設定され、</li><li><b>Operator</b> が等価 <b>==</b> または非等価 <b>!=</b> として設定されている場合)。</li></ul>"any other" の値を指定すると、テーブルにすでにあるルールで明示的に定義されていない他の値にルールを定義できます。</p>
InsertMenu.title=挿入
InsertMenu.appendRow=行の追加
InsertMenu.insertRowAbove=行を上に挿入
InsertMenu.insertRowBelow=行を下に挿入
InsertMenu.insertColumn=列を挿入
ViewMenu.title=表示
ViewMenu.zoom=ズーム
ViewMenu.merged=マージされました
ViewMenu.auditLog=監査ログ
CellContextMenuViewImpl.cut=カット
CellContextMenuViewImpl.copy=コピー
CellContextMenuViewImpl.paste=ペースト
CellContextMenuViewImpl.deleteCells=セルの削除
RowContextMenuViewImpl.cut=カット
RowContextMenuViewImpl.copy=コピー
RowContextMenuViewImpl.paste=ペースト
RowContextMenuViewImpl.insertRowAbove=行を上に挿入
RowContextMenuViewImpl.insertRowBelow=行を下に挿入
RowContextMenuViewImpl.deleteRows=行の削除
RowContextMenuViewImpl.title=テーブルレイアウトを見るレーダー
PopOverViewImpl.title=定義
AdditionalInfoPageView.InsertAdditionalInfo=列についての追加情報を挿入
AdditionalInfoPageView.HeaderDescription=ヘッダー (説明):
AdditionalInfoPageView.HideColumn=この列を隠す:
AdditionalInfoPageView.LogicallyInsert=論理的挿入:
AdditionalInfoPageView.UpdateEngine=この変更でエンジンを更新:
AdditionalInfoPageView.AdditionalInfoPageDescription=列と他の補助パラメーターのためのヘッダーテキスト追加
AttributeColumnPageView.Select=属性を選択
AttributeColumnPageView.ActivationGroup=activation-group
AttributeColumnPageView.ActivationGroupDescription=ルールを割り当てる必要があるアクティベーション (または XOR) グループを識別する文字列です。アクティベーショングループでは、1 つのルールのみをアクティブ化できます。最初に実行するルールは、アクティベーショングループ内でアクティブ化が保留となっているすべてのルールをキャンセルします。例: `activation-group "GroupName"`
AttributeColumnPageView.AgendaGroup=agenda-group
AttributeColumnPageView.AgendaGroupDescription=ルールを割り当てる必要があるアジェンダグループを識別する文字列です。アジェンダグループを使用すると、アジェンダをパーティションで区切り、ルールのグループに対する実行をさらに制御できます。フォーカスを取得したアジェンダグループのルールだけがアクティブ化されます。例: `agenda-group "GroupName"`
AttributeColumnPageView.AutoFocus=auto-focus
AttributeColumnPageView.AutoFocusDescription=アジェンダグループ内のルールにのみ適用可能なブール値。このオプションが選択されている場合は、次にルールがアクティブ化されると、そのルールが割り当てられたアジェンダグループに自動的にフォーカスが与えられます。
AttributeColumnPageView.Calendars=calendars
AttributeColumnPageView.CalendarsDescription=ルールのスケジュールを指定する Quartz カレンダーの定義。例: `calendars "* * 0-7,18-23 ? * *"` (営業時間外を除く)
AttributeColumnPageView.DateEffective=date-effective
AttributeColumnPageView.DateEffectiveDescription=日付と時刻の定義を含む文字列。現在の日付と時刻が `date-effective` 属性よりも後の場合は、このルールがアクティブ化されます。例: `date-effective "4-Sep-2018"`
AttributeColumnPageView.DateExpires=date-expires
AttributeColumnPageView.DateExpiresDescription=日付と時刻の定義を含む文字列。現在の日付と時刻が `date-effective` 属性よりも後の場合は、このルールはアクティブ化されません。例: `date-expires "4-Oct-2018"`
AttributeColumnPageView.Dialect=dialect
AttributeColumnPageView.DialectDescription=ルールのコード式に使用される言語として、`JAVA` または `MVEL` のいずれかを識別する文字列です。デフォルトで、ルールはパッケージレベルで指定された dialect を使用します。ここで指定された dialect は、ルールのパッケージ dialect 設定を上書きします。例: `dialect "JAVA"`
AttributeColumnPageView.Duration=duration
AttributeColumnPageView.DurationDescription=ルールの条件が一致している場合に、ルールがアクティブになってからの時間をミリ秒で定義する長整数値。例: `duration 10000`
AttributeColumnPageView.Enabled=enabled
AttributeColumnPageView.EnabledDescription=ブール値。オプションを選択すると、ルールが有効になります。オプションが選択されていない場合は、ルールは無効となります。
AttributeColumnPageView.LockOnActive=lock-on-active
AttributeColumnPageView.LockOnActiveDescription=ルールフローグループまたはアジェンダグループ内のルールにのみ適用可能なブール値。このオプションが選択されている場合、次にルールのルールフローグループがアクティブ化されるか、もしくはルールのアジェンダグループがフォーカスを得ると、ルールフローグループがアクティブでなくなるか、もしくはアジェンダグループがフォーカスを失うまで、ルールは再度アクティブ化されません。これは `no-loop` 属性を強化したものです。なぜなら、一致するルールのアクティブ化が、(ルールそのものによるものだけでなく) アップデート元にかかわらず破棄されるためです。この属性は、ファクトを修正するルールが多数あり、ルールの再一致と再実行を必要としない計算ルールに適しています。
AttributeColumnPageView.Negate=negate
AttributeColumnPageView.NegateDescription=ブール値。このオプションが選択されている場合は、ルールの条件 (when) 部分は無効となります。
AttributeColumnPageView.NoLoop=no-loop
AttributeColumnPageView.NoLoopDescription=ブール値。このオプションが選択される場合、ルールの結果が以前一致した条件を再度トリガーすると、ルールは再アクティブ化 (ループ) されません。この条件が選択されない場合、そのような状況でルールがループするかもしれません。
AttributeColumnPageView.RuleflowGroup=ruleflow-group
AttributeColumnPageView.RuleflowGroupDescription=ルールフローグループを識別する文字列。ルールフローグループで、関連するルールフローによってそのグループがアクティブ化された場合に限りルールを実行できます。例: `ruleflow-group "GroupName"`
AttributeColumnPageView.Salience=salience
AttributeColumnPageView.SalienceDescription=ルールの優先度を定義する整数。ルールの salience 値が高いほど、アクティベーションのキューでより優先して順序付けられます。例: `salience 10`
AttributeColumnPageView.Timer=timer
AttributeColumnPageView.TimerDescription=ルールのスケジューリングのために `int` (interval) もしくは `cron` タイマー定義で識別する文字列。例: `timer "*/5 * * * *"`  (5 分毎)
AttributeColumnPageView.AttributeColumnPageDescription=Salience、Enabled、Date-Effective などの DRL ルール属性を表す 1 つまたは複数の属性列を追加します。
CalculationTypePageView.Select=計算タイプを選択
CalculationTypePageView.CalculationType=計算タイプ:
CalculationTypePageView.LiteralValue=固定値
CalculationTypePageView.Formula=フォーミュラ
CalculationTypePageView.Predicate=述語
CalculationTypePageView.CalculationTypePageDescription=以下の計算タイプを選択してください:<ul><li><b>固定値:</b> セルの値はオペレーターを使ってフィールドと比較されます。</li><li><b>フォーミュラ:</b> セルの式は評価され、フィールドと比較されます。</li><li><b>述語:</b> フィールドは不要。式は <b>true</b> もしくは <b>false</b> に評価されます。</li></ul>
FieldPageView.Select=フィールドを選択
FieldPageView.Set=フィールドを設定
FieldPageView.SetThePatternFirst=先に"パターン"を設定する必要があります。
FieldPageView.SetTheCalculationTypeFirst=先に"計算タイプ"を設定する必要があります。
FieldPageView.YouMustEnterAColumnField=フィールドを選択してください。
FieldPageView.Field=フィールド:
FieldPageView.SelectField=フィールドを選択
FieldPageView.SelectFieldPageDescription=以前指定したファクトパターンからフィールドを選択します。フィールドオプションは、プロジェクトの <b>データオブジェクト</b> パネルのファクトファイルに定義されています。(例: <b>LoanApplication</b> ファクトタイプ内の <b>amount</b> または <b>lengthYears</b> のフィールド。)
FieldPageView.TextFieldPageDescription=フィールドに述語を設定します。述語は true か false として解決される式です。フィールドに $param を配置し、セルの値は param に置き換えられます。例: "this.callMethod($param)"
FieldPageView.PleaseEnterANameThatIsNotAlreadyUsed=他のパターンやフィールドで使われていない名前を入力してください.
FieldPageView.PredicateBindingInfo="計算タイプ" が "述語" の場合は、バイディングを設定する必要はありません。フィールドは述語式で設定され、true または false で評価されます。
FieldPageView.Binding=バインディング:
MetaDataColumnPageView.InsertTheMetadata=メタデータ名を挿入
MetaDataColumnPageView.Metadata=メタデータ:
MetaDataColumnPageView.MetaDataColumnPageDescription=この列オプションを使用すると、デシジョンテーブルの列としてメタデータ要素を定義できます。各列は、DRL ルールの通常のメタデータアノテーションを表します。デフォルトでは、メタデータ列は非表示です。列を表示するには、デシジョンテーブルエディターで <b>Edit Columns</b> をクリックし、<b>Hide column</b> のチェックボックスをオフにします。
OperatorPageView.NotifyNoSelectedOperator=オペレーターが選択されていません
OperatorPageView.Select=オペレータを選択
OperatorPageView.YouNeedToSetTheField=先に"フィールド"を設定する必要があります。
OperatorPageView.YouDontNeedToSetTheOperator="計算タイプ"が"述語"のとき、オペレータをセットする必要はありません
OperatorPageView.CurrentField=現在のフィールド:
OperatorPageView.Operator=オペレーター:
OperatorPageView.OperatorPageDescription=前に指定されたファクトパターンとフィールドに適用されるオペレータを選択
PatternPageView.Select=パターンを選択、もしくは新規作成
PatternPageView.Pattern=パターン:
PatternPageView.CreateANewFact=新規ファクトパターンを作成
PatternPageView.Metadata=メタデータ:
PatternPageView.SelectPattern=パターンを選択
PatternPageView.EntryPoint=エントリーポイント:
PatternPageView.YouMustEnterAColumnPattern=パターンを選択してください。
PatternPageView.PatternPageDescriptionConditions=テーブルの <i>Conditions</i> ですでに使用されているファクトパターンのリストから選択するか、または新規にファクトパターンを作成してください。ファクトパターンは、パッケージで使用可能なデータオブジェクトと、指定するモデルクラスバインディングとの組み合わせになります。(例: <b>LoanApplication [application]</b> または <b>IncomeSource [income]</b> で、括弧の部分は特定のファクトタイプに対するバインディング)。
PatternPageView.PatternPageDescriptionActions=テーブルの <i>条件</i> または <i>条件 BRL フラグメント</i> ですでに使用されているファクトパターンのリストから選択するか、または新規にファクトパターンを作成してください。ファクトパターンは、パッケージで使用可能なデータオブジェクトと、指定するモデルクラスバインディングとの組み合わせになります。(例: <b>LoanApplication [application]</b> または <b>IncomeSource [income]</b> で、括弧の部分は特定のファクトタイプに対するバインディング)。
PatternPageView.EntryPointDescription=該当する場合、ファクトパターンのエントリーポイントを定義します。エントリーポイントは、指定するとファクトがルールエンジンに組み込まれるゲートまたはストリームです。(例: <b>Application Stream</b>、<b>Credit Check Stream</b>)。
PatternToDeletePageView.PatternToDeletePageDescription=前にテーブルにファクトパターンとして追加されたファクトを削除してください。
RuleModellerPageView.RuleModellerPageDescription=ビジネスルール言語 (BRL) のフラグメントは、ガイド付きルールエディターを使用して作成したルールのセクションです。条件 BRL フラグメントはルールの "WHEN" 部分で、アクション BRL フラグメントはルールの "THEN" 部分です。この列オプションを使用して、ルールの左側 (WHEN) 部分で使用する条件 BRL フラグメントを定義できます。組み込みガイド付きルールエディターで、"Template Keys" として定義されたフィールド値は、デシジョンテーブルの列になります。単純な列タイプは、BRL フラグメントでバインドされているファクトおよびファクトフィールドを参照でき、これらのファクトおよびファクトフィールドから列タイプへの参照も可能です。
SummaryPageView.Select=列のタイプを選択
SummaryPageView.IncludeAdvanced=高度なオプションを含む
SummaryPageView.SummaryPageDescription=ガイド付きデシジョンテーブルに新しい列を追加します。(すべてのオプションを表示するには、<b>高度なオプションを含む</b> を選択します)。各列タイプに必要なパラメーターは、ウィザードの追加ページとして表示されます。
ValueOptionsPageView.InsertInfo=値についての情報を挿入
ValueOptionsPageView.ValueList=値リスト (オプション):
ValueOptionsPageView.OverSlidingWindow=Over sliding window:
ValueOptionsPageView.Default=デフォルト値:
ValueOptionsPageView.ConstraintValue=制約値:
ValueOptionsPageView.ValueOptionsPageDescription=(オプション) コンマとスペースで区切った値オプションのリストを入力して、ルールの条件 ("WHEN") 部分のテーブル入力データを制限します。この値リストを定義すると、値はその列のテーブルセルにドロップダウンリストとして提供され、ユーザーは、そこからオプションを 1 つだけ選択できます。(例 1 のリスト: <b>月曜日</b>、<b>水曜日</b>、<b>金曜日</b> で、これら 3 つのオプションのみを指定。例 2 のリスト: <b>"ドイツ、ベルリン"</b>、<b>"フランス、パリ"</b>)
DefaultValuesPageView.DefaultValuesPage=新しい行のデフォルト値を指定
DefaultValuesPageView.DefaultValuesPageDescription=この列で使用されるテンプレートキーごとにデフォルトの値を指定できます。テンプレートキーがない場合は、その列をアクティブにするか (true)、しないか (false) だけ を指定できます。
WorkItemPageView.Select=ワークアイテムを選択
WorkItemPageView.WorkItem=ワークアイテム:
WorkItemPageView.NoWorkItemsAvailable=<None available>
WorkItemPageView.Choose=選択…
WorkItemPageView.WorkItemPageDescription=事前定義したワークアイテムの定義に基づいて、ワークアイテムハンドラーを実行するか、または以前定義したファクトフィールドの値をルールの "THEN" 部分に対するワークアイテムハンドラーの結果パラメーターの値に設定します。ワークアイテムは、フィールドをリターンパラメーターに設定するために、同じデータタイプの結果パラメーターをバインドされたファクト上のフィールドとして定義しなければなりません。(ワークアイテムは <b>設計 → プロジェクト → [プロジェクトの選択] → アセットの追加 → ワークアイテムの定義</b> で作成されます)。
NewPatternView.FactType=ファクトタイプ:
NewPatternView.Binding=バインディング:
NewPatternView.NegatePattern=否定パターンの一致:
NewPatternView.CreateANewFact=新規ファクトパターンを作成
NewPatternView.Cancel=キャンセル
NewPatternView.OK=OK
NewPatternPresenter.PleaseEnterANameForFact=ファクトを名前にバインドする必要があります。バインディング名を入力してください。
NewPatternPresenter.PleaseEnterANameThatIsNotTheSameAsTheFactType=ファクトタイプ名と異なる名前を入力してください。
NewPatternPresenter.PleaseEnterANameThatIsNotAlreadyUsedByAnotherPattern=他のパターンやフィールドで使われていない名前を入力してください.
AdditionalInfoPage.AdditionalInfo=追加情報
AdditionalInfoPage.HideColumnDescription=これを選択すると列が非表示になり、選択を解除すると列が表示されます。
AdditionalInfoPage.HeaderColumnDescription=この列の役割を簡単に説明してください。
AdditionalInfoPage.LogicalInsertDescription=これを選択して、ファクトパターンを論理的にデシジョンエンジンに挿入するか、選択を解除して定期的に挿入します。デシジョンエンジンは、ファクトの挿入および取り消しに関する論理的な決定を担当します。定期的または所定の挿入後、ファクトは明示的に取り消す必要があります。論理的な挿入後、最初にファクトをアサートした条件が true でなくなると、ファクトは自動的に取り消されます。
AdditionalInfoPage.UpdateEngineDescription=このオプションは、選択したファクトパターンが、ガイド付きデシジョンテーブルの別の列ですでに使用されている場合に表示されます。これを選択して変更したフィールドの値でデシジョンエンジンを更新するか、選択を解除してデシジョンエンジンを更新しません。
AttributeColumnPage.AddNewAttribute=新規の属性列を追加
CalculationTypePage.CalculationType=計算タイプ
FieldPage.Field=フィールド
FieldPage.BindingDescription=(オプション) 必要に応じて、以前選択したフィールドのバインディングを定義します。(例: <b>LoanApplication [application]</b> パターン、<b>amount</b> フィールド、および <b>equal to</b> 演算子に、バインディング <b>$amount</b> を設定すると、終了条件は <b>application : LoanApplication($amount : amount == [value])</b> になります)。
MetaDataColumnPage.AddNewMetadata=新規のメタデータ列を追加
MetaDataColumnPage.MetadataNameEmpty=メタデータに名前を付ける必要があります。
MetaDataColumnPage.ThatColumnNameIsAlreadyInUsePleasePickAnother=その列名はすでに利用されています - 他の名前を指定してください
MetaDataColumnPage.IsNotValidIdentifier=メタデータキーは、Java 変数形式でなければなりません。数字で始めることはできず、スペースと特殊文字を含めることもできません。
OperatorPage.Operator=オペレーター
OperatorPage.NoOperator=(オペレーターなし)
PatternPage.Pattern=パターン
RuleModellerPage.InsertAnActionBRLFragment=アクション BRL フラグメントを挿入
RuleModellerPage.InsertAConditionBRLFragment=条件 BRL フラグメントを挿入
RuleModellerPage.RuleModeller=ルールモデラー
SummaryPage.NewColumn=新規の列
ValueOptionsPage.ValueOptions=値オプション
ValueOptionsPage.CEPWindowDescription=CEP ウインドウ
ValueOptionsPage.DefaultValueDescription=(オプション) 以前定義した値オプションの 1 つをデフォルト値として入力または選択してください。デフォルト値は新規の行のセルに自動的に表示されます。プロジェクトで以前に設定されたデータ列挙をデフォルト値として選択することもできます。デフォルト値が指定されていない場合は、テーブルセルはデフォルトで空白になります。
WorkItemPage.WorkItem=ワークアイテム
ActionInsertFactPlugin.SetTheValueOfAField=フィールド値をセット
ActionRetractFactPlugin.DeleteAnExistingFact=既存のファクトを削除
YouMustEnterAColumnHeaderValueDescription=列ヘッダーの値 (説明) を入力してください
ThatColumnNameIsAlreadyInUsePleasePickAnother=その列名はすでに利用されています - 他の名前を指定してください
ActionWorkItemPlugin.ExecuteWorkItem=ワークアイテムを実行
ActionWorkItemSetFieldPlugin.SetValue=フィールドの値をワークアイテム結果に設定
AttributeColumnPlugin.AddAttributeColumn=属性列を追加
ConditionColumnPlugin.AddConditionColumn=条件を追加
MetaDataColumnPlugin.AddMetadataColumn=メタデータ列を追加
NewGuidedDecisionTableColumnWizard.AddNewColumn=新規の列を追加
NewGuidedDecisionTableColumnWizard.EditColumn=列を編集
NewGuidedDecisionTableColumnWizard.GenericVetoError=列を更新できません。操作は拒否されました。
NewGuidedDecisionTableColumnWizard.UpdatePatternInUseVetoError=<p>このカラムは 1 つまたは複数のアクションが使用するパターンを定義しているため、更新できません。</p><p>先にそのアクションを削除してから再度試してください。</p>
NewGuidedDecisionTableColumnWizard.DeletePatternInUseVetoError0=<p>カラム ''{0}'' は、1 つまたは複数のアクションで使用されるパターンを定義するため、削除できません。</p><p>アクションを削除してから再試行してください。</p>
BRLConditionColumnPlugin.AddConditionBRL=条件 BRL フラグメントを追加
BRLActionColumnPlugin.AddActionBRL=アクション BRL フラグメントを追加
PatternToDeletePage.Pattern=パターン
PatternToDeletePageView.Choose=選択…
PatternToDeletePageView.None=<None defined>
PatternToDeletePageView.Select=削除するパターンを選択
PatternToDeletePageView.Pattern=パターン
GuidedDecisionTableAccordionItem.Metadata=メタデータ列
GuidedDecisionTableAccordionItem.Attribute=属性列
GuidedDecisionTableAccordionItem.Condition=条件列
GuidedDecisionTableAccordionItem.Action=アクション列
ColumnsPageView.ConfigureColumnsNote=最初に列を設定してから、行 (ルール) を追加します。このデシジョンテーブルを設定するためのファクトとフィールドを提供するために、(現在のパッケージ内の) ファクトモデルが必要となります。
ColumnsPage.Columns=カラム
ShowRuleNameOptionView.RuleName=ルール名のカラムを表示

